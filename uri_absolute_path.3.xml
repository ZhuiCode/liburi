<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0" xml:id="uri_absolute_path-3" xmlns="http://docbook.org/ns" xml:lang="en">
  <info>
	<title>URI Functions</title>
	<productname>System Programmer's Manual</productname>
	<authorgroup>
	  <author>
		<personname>
		  <firstname>Mo</firstname>
		  <surname>McRoberts</surname>
		</personname>
	  </author>
	</authorgroup>
	<copyright>
	  <year>2012</year>
	  <holder>Mo McRoberts</holder>
	</copyright>
  </info>
  
  <refmeta>
	<refentrytitle>uri_absolute_path</refentrytitle>
	<manvolnum>3</manvolnum>
  </refmeta>
  
  <refnamediv>
	<refname>uri_absolute_path</refname>
	<refpurpose>determine whether the path in a URI is relative or absolute</refpurpose>
  </refnamediv>
  
  <refsect1>
	<title>Library</title>
	<para>URI parsing library (liburi, -luri)</para>
  </refsect1>

  <refsynopsisdiv>
	<funcsynopsis>
	  <funcsynopsisinfo>#include &lt;liburi.h&gt;</funcsynopsisinfo>
	  <funcprototype>
		<funcdef>int <function>uri_absolute_path</function></funcdef>
		<paramdef>URI *<parameter>uri</parameter></paramdef>
	  </funcprototype>
	</funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
	<title>Description</title>
	<para>
	  The <function>uri_absolute_path</function> function determines whether
	  the path in a parsed URI is absolute or relative. An absolute path is
	  one begins with a "<literal>/</literal>" character.
	</para>
	<para>
	  URIs which do not include a path at all are not considered to be
	  absolute by this function. Any URI which does include a path and for
	  which <citerefentry><refentrytitle><ulink url="uri_absolute.3.html">uri_absolute</ulink></refentrytitle><manvolnum>3</manvolnum></citerefentry> returns
	  <literal>1</literal> will be determined to have an absolute
	  path. More specifically, any URI which includes either a scheme or a
	  hostname as well as a path are always considered to have an absolute
	  path (that is, <literal>file:foo</literal> and <literal>file:/foo</literal>
	  will give the same results after parsing).
	</para>
  </refsect1>

  <refsect1>
	<title>Parameters</title>
	<variablelist>

	  <varlistentry>
		<term><parameter>uri</parameter></term>
		<listitem>
		  <para>
			The URI to evaluate.
		  </para>
		</listitem>
	  </varlistentry>

	</variablelist>
  </refsect1>

  <refsect1>
	<title>Return value</title>
	<para>
	  If successful, <function>uri_absolute_path</function> returns
	  <literal>1</literal> if <parameter>uri</parameter> contains a URI
	  with an absolute path, and <literal>0</literal> otherwise.
	</para>
	<para>
	  If an error occurs, <function>uri_absolute</function> returns
	  <literal>-1</literal>, and sets <varname>errno</varname>
	  accordingly.
	</para>
  </refsect1>

  <refsect1>
	<title>Example</title>
	<programlisting language="c">
URI *uri;
int result;

uri = uri_create_str("http://example.com", NULL);
/* result will be 0 because no path is present */
result = uri_absolute_path(uri);
uri_destroy(uri);

uri = uri_create_str("/project", NULL);
/* result will be 1 because an absolute path was parsed */
result = uri_absolute_path(uri);
uri_destroy(uri);

uri = uri_create_str("results/output", NULL);
/* result will be 0 because a relative path was parsed */
result = uri_absolute_path(uri);
uri_destroy(uri);

uri = uri_create_str("file:output", NULL);
/* result will be 1 because a scheme was present, meaning the path
 * is always interpreted as as being absolute (in this case, "/output")
 */
result = uri_absolute_path(uri);
uri_destroy(uri);
	</programlisting>
  </refsect1>

  <refsect1>
	<title>See also</title>
	<para>
	  <citerefentry><refentrytitle><ulink url="liburi.3.html">liburi</ulink></refentrytitle><manvolnum>3</manvolnum></citerefentry>,
	  <citerefentry><refentrytitle><ulink url="uri_absolute.3.html">uri_absolute</ulink></refentrytitle><manvolnum>3</manvolnum></citerefentry>.
	</para>
  </refsect1>
  
</refentry>
